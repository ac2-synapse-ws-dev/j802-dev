{
	"name": "EORA_Country_Sector_Explorer",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "ac2sparkpooldev",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "27f5b68d-f1a3-4f15-bd15-910d5f3189d2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/fb276628-ada1-41d2-9fe6-b02c83c5d04e/resourceGroups/ac2-rg-synapse-01/providers/Microsoft.Synapse/workspaces/ac2-synapse-ws-dev/bigDataPools/ac2sparkpooldev",
				"name": "ac2sparkpooldev",
				"type": "Spark",
				"endpoint": "https://ac2-synapse-ws-dev.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/ac2sparkpooldev",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"print(\"Im Awake\")"
				],
				"execution_count": 65
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import pandas as pd"
				],
				"execution_count": 88
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"dataframes = []\r\n",
					"files = mssparkutils.fs.ls(f\"abfss://acj802@ac2synapsedatalabstorage.dfs.core.windows.net/Eora26_Country_Sector_Statistics/\")\r\n",
					"for file in files:\r\n",
					"    # Check if the file is a CSV file\r\n",
					"    if file.name.endswith(\".csv\"):\r\n",
					"        # Import the CSV file into a DataFrame\r\n",
					"        df = spark.read.csv(f\"abfss://acj802@ac2synapsedatalabstorage.dfs.core.windows.net/Eora26_Country_Sector_Statistics/{file.name}\", header=\"true\", inferSchema=\"true\")\r\n",
					"\r\n",
					"        # Add the DataFrame to the list\r\n",
					"        dataframes.append(df)"
				],
				"execution_count": 105
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"new_column_df = spark.read.csv(f\"abfss://acj802@ac2synapsedatalabstorage.dfs.core.windows.net/EORA_Labels/Country+Sector_Labels.csv\", header=\"true\", inferSchema=\"true\")\r\n",
					"\r\n",
					"# Iterate through the list of dataframes\r\n",
					"for i in range(len(dataframes)):\r\n",
					"    # Convert the Spark dataframe to a pandas dataframe\r\n",
					"    frame_pd = dataframes[i].toPandas()\r\n",
					"    # Add the new column to the pandas dataframe\r\n",
					"    frame_pd[\"Country+Sector\"] = new_column_df.toPandas()[\"Country+Sector\"]\r\n",
					"    # Move the new column to the first position\r\n",
					"    cols = frame_pd.columns.tolist()\r\n",
					"    cols = [\"Country+Sector\"] + [col for col in cols if col != \"Country+Sector\"]\r\n",
					"    frame_pd = frame_pd[cols]"
				],
				"execution_count": 110
			}
		]
	}
}